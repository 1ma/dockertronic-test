on:
  push:
    branches:
      - master

jobs:
  sanity-check:
    name: Check versions and Docker Hub connectivity
    runs-on: ubuntu-latest
    steps:
      - run: docker version
      - run: docker info
      - run: docker-compose version
      - run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}
      - uses: actions/checkout@v2
      - run: ls -laR
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

  tier1:
    name: Build Tier 1 images
    runs-on: ubuntu-latest
    needs: [sanity-check]
    strategy:
      fail-fast: false
      matrix:
        images:
          - ["alpine", "1maa/alpine:3.15"]
          - ["alpine", "1maa/alpine:latest"]
          - ["mysql", "1maa/mysql:8.0"]
          - ["sqlite", "1maa/sqlite:latest"]
    env:
      CONTEXT: ${{ matrix.images[0] }}
      IMAGE: ${{ matrix.images[1] }}
    steps:
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - uses: actions/checkout@v2
      - run: docker build --load --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
      - run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}
          docker push $IMAGE

  tier2:
    name: Build Tier 2 images
    runs-on: ubuntu-latest
    needs: [tier1]
    strategy:
      fail-fast: false
      matrix:
        images:
          - ["sakila", "1maa/sakila:latest"]
    env:
      CONTEXT: ${{ matrix.images[0] }}
      IMAGE: ${{ matrix.images[1] }}
    steps:
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - uses: actions/checkout@v2
      - run: docker build --load --cache-from $IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE -f $CONTEXT/Dockerfile $CONTEXT
      - run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}
          docker push $IMAGE
